{"version":3,"file":"use-magic-link.esm.js","sources":["../src/use-magic-link.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport EventEmitter from 'event-emitter'\nimport unfetch from 'isomorphic-unfetch'\nimport ms from 'ms'\nimport { Sema } from 'async-sema'\n\nlet magic\nif (typeof (window) !== 'undefined') {\n  magic = new Magic('pk_live_BF2003EFDD157AF4')\n}\n\nconst tokenSema = new Sema(1)\nconst loggedInSema = new Sema(1)\nconst loginEvents = new EventEmitter()\n\nlet currentLoginState = null\nlet currentToken = null\n\nasync function getMagicToken () {\n  await tokenSema.acquire()\n  try {\n    if (currentToken && currentToken.expiredAt > Date.now()) {\n      return currentToken.token\n    }\n\n    const token = await magic.user.getIdToken()\n    setToken(token)\n    return token\n  } finally {\n    tokenSema.release()\n  }\n}\n\nasync function isLoggedIn () {\n  await loggedInSema.acquire()\n\n  try {\n    if (currentLoginState !== null) {\n      return currentLoginState\n    }\n\n    await getMagicToken()\n    currentLoginState = true\n  } catch (err) {\n    currentLoginState = false\n  } finally {\n    loggedInSema.release()\n  }\n\n  return currentLoginState\n}\n\nfunction setToken (token, lifespan = ms('15min')) {\n  currentToken = {\n    token,\n    expiredAt: Date.now() + lifespan - ms('1min')\n  }\n}\n\nexport default function useAuth () {\n  const [loggedIn, setLoggedIn] = useState(currentLoginState !== null ? currentLoginState : false)\n  const [loading, setLoading] = useState(currentLoginState === null)\n  const [error, setError] = useState(null)\n  const [loggingIn, setLoggingIn] = useState(false)\n  const [loggingOut, setLoggingOut] = useState(false)\n\n  function login (email) {\n    setError(null)\n    setLoggingIn(true)\n\n    magic.auth.loginWithMagicLink({ email })\n      .then((token) => {\n        currentLoginState = true\n        setToken(token)\n        loginEvents.emit('loggedIn', true)\n        setLoggedIn(true)\n      }, setError)\n      .then(() => setLoggingIn(false))\n  }\n\n  async function logout () {\n    setError(null)\n    setLoggingOut(true)\n\n    try {\n      await magic.user.logout()\n      currentLoginState = null\n      currentToken = null\n      loginEvents.emit('loggedIn', false)\n      setLoggedIn(false)\n    } catch (err) {\n      setError(err)\n    } finally {\n      setLoggingOut(false)\n    }\n\n    return currentLoginState === null\n  }\n\n  async function fetch (url, opts = {}) {\n    const token = await getMagicToken()\n    if (token) {\n      opts.headers = opts.headers || {}\n      opts.headers.Authorization = `Bearer ${token}`\n    }\n\n    return unfetch(url, opts)\n  }\n\n  useEffect(() => {\n    // TODO: Add much better caching logic.\n    // We may want to check the status of login time to time.\n    // But not for every re-render or do something like this.\n    if (!currentLoginState) {\n      isLoggedIn()\n        .then((loginState) => {\n          setLoggedIn(loginState)\n        })\n        .then(() => setLoading(false))\n    }\n\n    function watchLoggedIn (state) {\n      setLoggedIn(state)\n    }\n    loginEvents.on('loggedIn', watchLoggedIn)\n\n    return () => {\n      loginEvents.off('loggedIn', watchLoggedIn)\n    }\n  }, [currentLoginState])\n\n  return {\n    loggedIn,\n    loading,\n    error,\n    loggingIn,\n    loggingOut,\n    login,\n    logout,\n    fetch,\n    loginEvents\n  }\n}\n"],"names":["_catch","body","recover","result","e","then","_finallyRethrows","finalizer","bind","magic","getMagicToken","tokenSema","acquire","currentToken","expiredAt","Date","now","token","user","getIdToken","setToken","release","window","Magic","Sema","loggedInSema","loginEvents","EventEmitter","currentLoginState","lifespan","ms","useState","loggedIn","setLoggedIn","loading","setLoading","error","setError","loggingIn","setLoggingIn","loggingOut","setLoggingOut","useEffect","watchLoggedIn","state","isLoggedIn","loginState","on","off","login","email","auth","loginWithMagicLink","emit","logout","err","fetch","url","opts","headers","Authorization","unfetch"],"mappings":"mKAkjBO,SAASA,EAAOC,EAAMC,GAC5B,IACC,IAAIC,EAASF,IACZ,MAAMG,GACP,OAAOF,EAAQE,GAEhB,OAAID,GAAUA,EAAOE,KACbF,EAAOE,UAAK,EAAQH,GAErBC,EAID,SAASG,EAAiBL,EAAMM,GACtC,IACC,IAAIJ,EAASF,IACZ,MAAOG,GACR,OAAOG,GAAU,EAAMH,GAExB,OAAID,GAAUA,EAAOE,KACbF,EAAOE,KAAKE,EAAUC,KAAK,MAAM,GAAQD,EAAUC,KAAK,MAAM,IAE/DD,GAAU,EAAOJ,OAlkBrBM,EAYWC,wCACPC,EAAUC,sDAEVC,GAAgBA,EAAaC,UAAYC,KAAKC,MACzCH,EAAaI,sBAGFR,EAAMS,KAAKC,4BAAzBF,GAEN,OADAG,EAASH,GACFA,mBATqB,GAW5BN,EAAUU,qEAtBU,oBAAZC,SACVb,EAAQ,IAAIc,MAAM,6BAGpB,IAAMZ,EAAY,IAAIa,EAAK,GACrBC,EAAe,IAAID,EAAK,GACxBE,EAAc,IAAIC,EAEpBC,EAAoB,KACpBf,EAAe,KAoCnB,SAASO,EAAUH,EAAOY,YAAAA,IAAAA,EAAWC,EAAG,UACtCjB,EAAe,CACbI,MAAAA,EACAH,UAAWC,KAAKC,MAAQa,EAAWC,EAAG,yCAKRC,EAA+B,OAAtBH,GAA6BA,GAA/DI,OAAUC,SACaF,EAA+B,OAAtBH,GAAhCM,OAASC,SACUJ,EAAS,MAA5BK,OAAOC,SACoBN,GAAS,GAApCO,OAAWC,SACkBR,GAAS,GAAtCS,OAAYC,OAmEnB,OAtBAC,EAAU,WAYR,SAASC,EAAeC,GACtBX,EAAYW,GAId,OAbKhB,yCA/EDH,EAAab,oEAGjB,OAA0B,OAAtBgB,OACKA,mBAGHlB,qBACNkB,GAAoB,gBAEpBA,GAAoB,mBAXK,GAazBH,EAAaJ,8EAGRO,QAAAA,uCAiEHiB,GACGxC,KAAK,SAACyC,GACLb,EAAYa,KAEbzC,KAAK,kBAAM8B,GAAW,KAM3BT,EAAYqB,GAAG,WAAYJ,cAGzBjB,EAAYsB,IAAI,WAAYL,KAE7B,CAACf,IAEG,CACLI,SAAAA,EACAE,QAAAA,EACAE,MAAAA,EACAE,UAAAA,EACAE,WAAAA,EACAS,MAvEF,SAAgBC,GACdb,EAAS,MACTE,GAAa,GAEb9B,EAAM0C,KAAKC,mBAAmB,CAAEF,MAAAA,IAC7B7C,KAAK,SAACY,GACLW,GAAoB,EACpBR,EAASH,GACTS,EAAY2B,KAAK,YAAY,GAC7BpB,GAAY,IACXI,GACFhC,KAAK,kBAAMkC,GAAa,MA6D3Be,sBAzDAjB,EAAS,MACTI,GAAc,GAFS,8DAKfhC,EAAMS,KAAKoC,0BACjB1B,EAAoB,KACpBf,EAAe,KACfa,EAAY2B,KAAK,YAAY,GAC7BpB,GAAY,eACLsB,GACPlB,EAASkB,oBAXY,GAarBd,GAAc,2EAGhB,OAA6B,OAAtBb,IAAsB,OAAtBA,GArCwB,oCAgF/B4B,eAxCoBC,EAAKC,YAAAA,IAAAA,EAAO,+BACZhD,mBAAdO,GAMN,OALIA,IACFyC,EAAKC,QAAUD,EAAKC,SAAW,GAC/BD,EAAKC,QAAQC,wBAA0B3C,GAGlC4C,EAAQJ,EAAKC,KA/CW,oCAiF/BhC,YAAAA"}